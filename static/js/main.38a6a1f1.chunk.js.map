{"version":3,"sources":["components/blocksList/blockList.module.css","containers/Editor/Editor.module.css","components/UI/ControlButtons/ControlButtons.module.css","components/UI/Loader/Loader.module.css","App.module.css","assets/happy.svg","assets/sad.svg","components/Block/Block.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","assets/loader.gif","components/blocksList/blockList.js","components/Block/Block.js","components/UI/ControlButtons/ControlButtons.js","hoc/Auxiliary.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Loader/Loader.js","containers/Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","blockList","props","infoText","list","length","typeList","className","styles","src","Sad","alt","Happy","blockWrapper","colLeft","colRight","header","setList","newState","change","sortWrapper","group","animation","sort","map","block","key","id","name","controlButtons","buttonsWrapper","Save","onClick","saveClick","disabled","saved","listLength","Cancel","cancelClick","aux","children","backdrop","show","classes","Backdrop","clicked","Modal","this","modalClosed","style","transform","opacity","Component","loader","Background","Loader","text","Editor","state","blocksEnabled","blocksDisabled","loading","loaderText","error","modalShow","compare","a","b","blockPrev","position","blockNext","comparison","setListHandler","listType","checkpos","forEach","element","index","enabled","setState","saveHandler","blocks","concat","console","log","setTimeout","cancelHandler","alert","closeHandler","closeModalHandler","blocksToSort","Promise","resolve","reject","blocksSorted","blockEnabled","filter","blockDisabled","includes","dataEnabled","dataDisabled","then","result","catch","editor","content","Block","ControlButtons","App","app","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,aAAe,gCAAgC,SAAW,4BAA4B,OAAS,0BAA0B,YAAc,+BAA+B,QAAU,2BAA2B,SAAW,4BAA4B,MAAQ,2B,gBCA5QD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,QAAU,wBAAwB,SAAW,2B,qBCAjGD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,KAAO,6BAA6B,OAAS,iC,gBCAvHD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,OAAS,yB,gBCAnED,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,gBAAgB,2BAA2B,OAAS,sB,oBCDtHD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCC3CD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCD7BD,EAAOC,QAAU,IAA0B,oC,8OCyD5BC,EAjDG,SAACC,GAEf,IAAIC,EAAW,KAEf,GAA0B,IAAtBD,EAAME,KAAKC,OACX,OAAQH,EAAMI,UACV,IAAK,UACDH,EACI,uBAAGI,UAAaC,IAAOL,UACnB,yBAAKM,IAAKC,IAAKC,IAAI,KADvB,iEAEgD,6BAFhD,4DAKJ,MACJ,IAAK,WACDR,EACI,uBAAGI,UAAaC,IAAOL,UACnB,yBAAKM,IAAKG,IAAOD,IAAI,KADzB,8EAKJ,MACJ,QACIR,EAAW,KAKvB,OACI,yBAAKI,UAAS,UAAKC,IAAOK,aAAZ,YAA+C,YAAnBX,EAAMI,SAAyBE,IAAOM,QAAUN,IAAOO,WACzE,aAAnBb,EAAMI,SAA0B,uBAAGC,UAAWC,IAAOQ,QAArB,mCAA2D,KAC1Fb,EACF,kBAAC,IAAD,CACIC,KAAMF,EAAME,KACZa,QAAU,SAACC,GAAD,OAAchB,EAAMiB,OAAOD,EAAUhB,EAAMI,WACrDC,UAAaC,IAAOY,YACpBC,MAAM,sBACNC,UAAa,IACbC,KAAyB,aAAnBrB,EAAMI,UAEPJ,EAAME,KAAKoB,KAAI,SAAAC,GAAK,OACb,yBAAKC,IAAKD,EAAME,GAAIpB,UAAWC,IAAOiB,OAAQA,EAAMG,Y,iBCrCjEH,EARD,SAACvB,GACX,OACI,yBAAKK,UAAWC,IAAOiB,OAClBvB,EAAM0B,O,gBCMJC,EATQ,SAAC3B,GACpB,OACI,yBAAKK,UAAWC,IAAOsB,gBACnB,4BAAQvB,UAAWC,IAAOuB,KAAMC,QAAS9B,EAAM+B,UAAWC,YAAWhC,EAAMiC,OAA8B,IAArBjC,EAAMkC,aAA1F,UACA,4BAAQ7B,UAAWC,IAAO6B,OAAQL,QAAS9B,EAAMoC,aAAjD,a,iBCNGC,EAFH,SAACrC,GAAD,OAAWA,EAAMsC,U,iBCQdC,EAJE,SAACvC,GAAD,OACbA,EAAMwC,KAAO,yBAAKnC,UAAWoC,IAAQC,SAAUZ,QAAS9B,EAAM2C,UAAkB,MCmBrEC,E,iLAhBP,OACI,kBAAC,EAAD,KACI,kBAACF,EAAD,CAAUF,KAAMK,KAAK7C,MAAMwC,KAAMG,QAASE,KAAK7C,MAAM8C,cACrD,yBACIzC,UAAWoC,IAAQG,MACnBG,MAAO,CACHC,UAAWH,KAAK7C,MAAMwC,KAAO,gBAAkB,qBAC/CS,QAASJ,KAAK7C,MAAMwC,KAAO,IAAM,MAEpCK,KAAK7C,MAAMsC,e,GAXZY,a,iDCULC,EAXA,SAACnD,GACZ,OACI,yBAAKK,UAAWC,IAAO8C,YACnB,yBAAK/C,UAAWC,IAAO+C,QACnB,yBAAK9C,IAAK8C,IAAQ5C,IAAI,WACrBT,EAAMsD,KAFX,SC8LGC,E,2MA1LXC,MAAQ,CACJC,cAAe,GACfC,eAAgB,GAChBC,SAAS,EACTC,WAAY,KACZ3B,OAAO,EACP4B,OAAO,EACPC,WAAW,G,EAsDfC,QAAU,SAACC,EAAEC,GACT,IAAMC,EAAYF,EAAEG,SACdC,EAAYH,EAAEE,SAEhBE,EAAa,EAMjB,OALIH,EAAYE,EACZC,EAAa,EACNH,EAAYE,IACnBC,GAAc,GAEXA,G,EAGXC,eAAiB,SAACtD,EAAUuD,GACxB,OAAQA,GACJ,IAAK,UACD,IAAIC,GAAW,EACfxD,EAASyD,SAAQ,SAACC,EAASC,GACnBD,EAAQP,WAAaQ,IACrBH,GAAW,EACXE,EAAQP,SAAWQ,GAElBD,EAAQE,UAASF,EAAQE,SAAU,OAEzC5D,EAASb,SAAW,EAAKqD,MAAMC,cAActD,QAAUqE,IAAU,EAAKK,SAAS,CAACpB,cAAezC,EAAUiB,OAAO,IACnH,MACJ,IAAK,WACDjB,EAASyD,SAAQ,SAACC,EAASC,GACvBD,EAAQP,SAAWQ,EAChBD,EAAQE,UAASF,EAAQE,SAAU,MAEvC5D,EAASb,SAAW,EAAKqD,MAAME,eAAevD,QAAQ,EAAK0E,SAAS,CAACnB,eAAgB1C,M,EAOpG8D,YAAc,WACV,IAAK,EAAKtB,MAAMvB,MAAO,CACnB,EAAK4C,SAAS,CAAClB,SAAS,EAAMC,WAAY,gBAE1C,IAAIH,EAAa,YAAO,EAAKD,MAAMC,eAC7BC,EAAc,YAAO,EAAKF,MAAME,gBAChCqB,EAAStB,EAAcuB,OAAOtB,GACpCuB,QAAQC,IAAI,SACZD,QAAQC,IAAIH,GACZI,YAAW,WACP,EAAKN,SAAS,CAAC5C,OAAO,EAAM0B,SAAS,MACtC,Q,EAGXyB,cAAgB,WACR,EAAK5B,MAAMvB,OACXgD,QAAQC,IAAI,UAEZG,MAAM,8DAEN,EAAKR,SAAS,CAACf,WAAW,K,EAGlCwB,aAAe,WACXL,QAAQC,IAAI,UACZ,EAAKK,oBACLF,MAAM,8D,EAGVE,kBAAoB,WAChB,EAAKV,SAAS,CAAEf,WAAW,K,mFAvHT,IAAD,OAEjBjB,KAAKgC,SAAS,CAAClB,SAAS,EAAMC,WAAY,mBAC1C,IAAI4B,EAAe,CACf,CAAE/D,GAAI,OAAQC,KAAM,SAAUyC,SAAU,EAAGS,SAAS,GACpD,CAAEnD,GAAI,OAAQC,KAAM,WAAYyC,SAAU,EAAGS,SAAS,GACtD,CAAEnD,GAAI,OAAQC,KAAM,SAAUyC,SAAU,EAAGS,SAAS,GACpD,CAAEnD,GAAI,OAAQC,KAAM,cAAeyC,SAAU,EAAGS,SAAS,GACzD,CAAEnD,GAAI,OAAQC,KAAM,UAAWyC,SAAU,EAAGS,SAAS,GACrD,CAAEnD,GAAI,OAAQC,KAAM,uBAAwByC,SAAU,EAAGS,SAAS,GAClE,CAAEnD,GAAI,OAAQC,KAAM,aAAcyC,SAAU,EAAGS,SAAS,IAGzC,IAAIa,SAAS,SAACC,EAASC,GAKtC,IAAMC,EAAY,UAAOJ,GACzBI,EAAavE,KAAK,EAAK0C,SAEvB,IAAM8B,EAAeD,EAAaE,QAAO,SAAAvE,GAAK,OAAKA,EAAMqD,WACnDmB,EAAgBH,EAAaE,QAAO,SAAAvE,GAAK,OAAKsE,EAAaG,SAASzE,MAE1E4D,YAAW,WACPO,EAAQ,CAACpC,KAAM,eAAgB2C,YAAaJ,EAAcK,aAAcH,MAEzE,SAKII,MAAM,SAAAC,GACbnB,QAAQC,IAAIkB,EAAOH,aACnBhB,QAAQC,IAAIkB,EAAOF,cACnB,EAAKrB,SAAS,CACVpB,cAAe2C,EAAOH,YACtBvC,eAAgB0C,EAAOF,aACvBvC,SAAS,EACT1B,OAAO,OAGdoE,OAAM,SAAAxC,GACHoB,QAAQC,IAAIrB,GACZ,EAAKgB,SAAS,CACVlB,SAAS,EACTE,OAAO,S,+BA8Ef,IAAIV,EAAS,KACTmD,EAASzD,KAAKW,MAAMK,MAAQ,mHAAsE,KA8BtG,OA5BGhB,KAAKW,MAAMC,cAActD,OAAS,GAAK0C,KAAKW,MAAME,eAAevD,OAAS,KACzEmG,EACI,kBAAC,EAAD,KACI,yBAAKjG,UAAWC,IAAOiG,SACnB,yBAAKlG,UAAWC,IAAOM,SACnB,kBAAC4F,EAAD,CAAO9E,KAAK,qBACZ,kBAAC,EAAD,CACItB,SAAS,UACTF,KAAM2C,KAAKW,MAAMC,cACjBxC,OAAQ4B,KAAKyB,iBACjB,kBAACkC,EAAD,CAAO9E,KAAK,YAEhB,yBAAKrB,UAAWC,IAAOO,UACnB,kBAAC,EAAD,CACIT,SAAW,WACXF,KAAQ2C,KAAKW,MAAME,eACnBzC,OAAQ4B,KAAKyB,qBAQhCzB,KAAKW,MAAMG,UACZR,EAAS,kBAACE,EAAD,CAAQC,KAAMT,KAAKW,MAAMI,cAIlC,kBAAC,EAAD,KACKT,EACAmD,EACD,kBAACG,EAAD,CACIxE,MAAOY,KAAKW,MAAMvB,MAClBC,WAAYW,KAAKW,MAAMC,cAActD,OACrC4B,UAAWc,KAAKiC,YAChB1C,YAAaS,KAAKuC,gBACtB,kBAAC,EAAD,CAAO5C,KAAMK,KAAKW,MAAMM,UAAWhB,YAAaD,KAAK0C,mBAChD,uDACD,yBAAKlF,UAAWC,IAAOsB,gBACnB,4BAAQE,QAASe,KAAKyC,cAAtB,OACA,4BAAQxD,QAASe,KAAK0C,mBAAtB,c,GAnLHrC,a,iBCONwD,MAbf,WACE,OACE,yBAAKjF,GAAG,MAAMpB,UAAWC,IAAOqG,KAC9B,4BAAQtG,UAAWC,IAAOQ,QACxB,6CAIF,kBAAC,EAAD,QCDc8F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpB,MAAK,SAAAqB,GACjCA,EAAaC,kB","file":"static/js/main.38a6a1f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockWrapper\":\"blockList_blockWrapper__EC5Ac\",\"colRight\":\"blockList_colRight__18vG8\",\"header\":\"blockList_header__2ntka\",\"sortWrapper\":\"blockList_sortWrapper__2RUdl\",\"colLeft\":\"blockList_colLeft__24Nsk\",\"infoText\":\"blockList_infoText__nYxwq\",\"block\":\"blockList_block__1E_qE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Editor_content__Q8ZgY\",\"colLeft\":\"Editor_colLeft__kI7tn\",\"colRight\":\"Editor_colRight__3NtPd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsWrapper\":\"ControlButtons_buttonsWrapper__X34NN\",\"Save\":\"ControlButtons_Save__10TFR\",\"Cancel\":\"ControlButtons_Cancel__2Q5Ge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Loader_Background__1et3E\",\"Loader\":\"Loader_Loader__3UAK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1wunZ\",\"logo\":\"App_logo__1XCpF\",\"App-logo-spin\":\"App_App-logo-spin__MSygx\",\"header\":\"App_header__Qo0hN\"};","module.exports = __webpack_public_path__ + \"static/media/happy.52814235.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad.473d3844.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Block_block__3EVDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1e10A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__mYQL1\"};","module.exports = __webpack_public_path__ + \"static/media/loader.13fa1912.gif\";","import React from \"react\";\r\nimport { ReactSortable} from \"react-sortablejs\";\r\n\r\nimport styles from './blockList.module.css';\r\nimport Happy from '../../assets/happy.svg';\r\nimport Sad from '../../assets/sad.svg';\r\n\r\n\r\nconst blockList = (props) => {\r\n\r\n    let infoText = null;\r\n\r\n    if (props.list.length === 0){\r\n        switch (props.typeList) {\r\n            case 'enabled':\r\n                infoText = (\r\n                    <p className = {styles.infoText}>\r\n                        <img src={Sad} alt=''/>\r\n                        Twój sklep nie będzie wyglądał zbyt dobrze. <br/> Dodaj co najmniej jeden blok do strony głównej.\r\n                    </p>\r\n                ); \r\n                break;\r\n            case 'disabled':\r\n                infoText = (\r\n                    <p className = {styles.infoText}>\r\n                        <img src={Happy} alt=''/>\r\n                        Świetnie !!! Wszystkie dostępne bloki zostały wykorzystane.\r\n                    </p>\r\n                );\r\n                break;\r\n            default:\r\n                infoText = null;\r\n                break;\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <div className={`${styles.blockWrapper} ${props.typeList === 'enabled' ? styles.colLeft : styles.colRight}`}>\r\n            {props.typeList === 'disabled' ? <p className={styles.header}>Baza dostępnych bloków:</p> : null }\r\n            { infoText }\r\n            <ReactSortable \r\n                list={props.list} \r\n                setList={ (newState) => props.change(newState, props.typeList) }\r\n                className = {styles.sortWrapper}\r\n                group=\"shared-group-blocks\"\r\n                animation = {300}\r\n                sort={props.typeList === 'disabled' ? false : true }\r\n                >\r\n                    {props.list.map(block => (\r\n                            <div key={block.id} className={styles.block}>{block.name}</div>\r\n                        )\r\n                    )}\r\n            </ReactSortable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default blockList;","import React from 'react';\r\n\r\nimport styles from './Block.module.css'\r\n\r\nconst block = (props) => {\r\n    return (\r\n        <div className={styles.block}>\r\n            {props.name}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default block;","import React from 'react';\r\n\r\nimport styles from './ControlButtons.module.css';\r\n\r\nconst controlButtons = (props) => {\r\n    return (\r\n        <div className={styles.buttonsWrapper}>\r\n            <button className={styles.Save} onClick={props.saveClick} disabled={(props.saved || props.listLength === 0) ? true : false }>Zapisz</button>\r\n            <button className={styles.Cancel} onClick={props.cancelClick}>Zamknij</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default controlButtons;","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React, { Component } from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    render () {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Modal;","import React from 'react';\r\n\r\nimport styles from './Loader.module.css';\r\nimport Loader from '../../../assets/loader.gif';\r\n\r\nconst loader = (props) => {\r\n    return (\r\n        <div className={styles.Background}>\r\n            <div className={styles.Loader}>\r\n                <img src={Loader} alt='loader'/>\r\n                {props.text}...\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default loader;","import React, { Component } from 'react';\r\n\r\nimport BlockList from '../../components/blocksList/blockList';\r\nimport Block from '../../components/Block/Block';\r\nimport ControlButtons from '../../components/UI/ControlButtons/ControlButtons';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport styles from './Editor.module.css';\r\n\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport Aux from '../../hoc/Auxiliary';\r\n\r\nclass Editor extends Component {\r\n    state = {\r\n        blocksEnabled: [],\r\n        blocksDisabled: [],\r\n        loading: false,\r\n        loaderText: null,\r\n        saved: true,\r\n        error: false,\r\n        modalShow: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        //console.log('did mount');\r\n        this.setState({loading: true, loaderText: 'Ładowanie'});\r\n        let blocksToSort = [\r\n            { id: 'asd1', name: 'slider', position: 0, enabled: true },\r\n            { id: 'vef2', name: 'promocje', position: 1, enabled: true },\r\n            { id: 'asd3', name: 'banner', position: 2, enabled: true },\r\n            { id: 'asd4', name: 'bestsellery', position: 3, enabled: true },\r\n            { id: 'bgt5', name: 'nowosci', position: 4, enabled: true },\r\n            { id: 'aon6', name: 'promocje w kategorii', position: 5, enabled: true },\r\n            { id: 'pla7', name: 'newsletter', position: 6, enabled: true }\r\n        ];\r\n        \r\n        const sortBlocks = new Promise( (resolve, reject) => {\r\n            //console.log('Promise start');\r\n            //Przy pobieraniu z serwera najpierw trzeba rozdzielić elementy na Enabled i Disabled, a nastepnie posortować każda tablice oddzielnie i ustawić state. \r\n            //(to wszystko w funkcji \"then\" - gdy pobieranie z bazy sie powiedzie)\r\n\r\n            const blocksSorted = [...blocksToSort];\r\n            blocksSorted.sort(this.compare);\r\n           \r\n            const blockEnabled = blocksSorted.filter(block => (block.enabled));\r\n            const blockDisabled = blocksSorted.filter(block => !blockEnabled.includes(block));\r\n\r\n            setTimeout(() => { \r\n                resolve({text: 'Sorted done!', dataEnabled: blockEnabled, dataDisabled: blockDisabled});\r\n                //reject('Ładowanie nie powiodło się');\r\n            }, 1500);\r\n        });\r\n\r\n        //console.log(blocksToSort); \r\n\r\n        sortBlocks.then( result => {\r\n            console.log(result.dataEnabled);\r\n            console.log(result.dataDisabled);\r\n            this.setState({\r\n                blocksEnabled: result.dataEnabled,\r\n                blocksDisabled: result.dataDisabled,\r\n                loading: false,\r\n                saved: true\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            this.setState({\r\n                loading: false,\r\n                error: true\r\n            });\r\n        });\r\n    }\r\n\r\n    compare = (a,b) => {\r\n        const blockPrev = a.position;\r\n        const blockNext = b.position;\r\n        \r\n        let comparison = 0;\r\n        if (blockPrev > blockNext) {\r\n            comparison = 1;\r\n        } else if (blockPrev < blockNext) {\r\n            comparison = -1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    setListHandler = (newState, listType) => {\r\n        switch (listType) {\r\n            case 'enabled':\r\n                let checkpos = false;\r\n                newState.forEach((element, index) => {\r\n                    if (element.position !== index) {\r\n                        checkpos = true;\r\n                        element.position = index;\r\n                    }\r\n                    if (!element.enabled) element.enabled = true;\r\n                });\r\n                if(newState.length !== this.state.blocksEnabled.length || checkpos) this.setState({blocksEnabled: newState, saved: false});\r\n                break;\r\n            case 'disabled':\r\n                newState.forEach((element, index) => {\r\n                    element.position = index;\r\n                    if(element.enabled) element.enabled = false;\r\n                });\r\n                if(newState.length !== this.state.blocksDisabled.length) this.setState({blocksDisabled: newState});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    saveHandler = () => {\r\n        if (!this.state.saved) {\r\n            this.setState({loading: true, loaderText: 'Zapisywanie'});\r\n            /*wysyłanie elementow do bazy - prawdopodobnie axios do pliku php*/\r\n            let blocksEnabled = [...this.state.blocksEnabled];\r\n            const blocksDisabled = [...this.state.blocksDisabled];\r\n            const blocks = blocksEnabled.concat(blocksDisabled);\r\n            console.log('Save:');\r\n            console.log(blocks);\r\n            setTimeout(() => {  // symulacja zapisu do bazy - to będzie obslugiwane przez axios\r\n                this.setState({saved: true, loading: false});\r\n            }, 1500);\r\n        }\r\n    }\r\n    cancelHandler = () => {\r\n        if (this.state.saved) {\r\n            console.log('Closed');\r\n            //this.props.history.push('/test'); // chyba potrzebny react-router\r\n            alert('Tutaj przekierowanie na strone główną panelu');\r\n        } else {\r\n            this.setState({modalShow: true});\r\n        }\r\n    }\r\n    closeHandler = () => {\r\n        console.log('Closed');\r\n        this.closeModalHandler();\r\n        alert('Tutaj przekierowanie na strone główną panelu');\r\n    }\r\n\r\n    closeModalHandler = () => {\r\n        this.setState({ modalShow: false });\r\n    }\r\n\r\n    render () {\r\n\r\n        let loader = null;\r\n        let editor = this.state.error ? <p>Ładowanie bloków nie powiodło się. Spróboj ponownie pózniej.</p> : null;\r\n\r\n        if(this.state.blocksEnabled.length > 0 || this.state.blocksDisabled.length > 0) {\r\n            editor = (\r\n                <Aux>\r\n                    <div className={styles.content}>\r\n                        <div className={styles.colLeft}>\r\n                            <Block name='nagłówek'/>\r\n                            <BlockList \r\n                                typeList='enabled'\r\n                                list={this.state.blocksEnabled}\r\n                                change={this.setListHandler} />\r\n                            <Block name='stopka'/>\r\n                        </div>\r\n                        <div className={styles.colRight}>\r\n                            <BlockList \r\n                                typeList = \"disabled\"\r\n                                list = {this.state.blocksDisabled}\r\n                                change={this.setListHandler} />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </Aux>\r\n            );\r\n        }\r\n\r\n        if ( this.state.loading ) {\r\n            loader = <Loader text={this.state.loaderText}/>;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {loader}\r\n                {editor}\r\n                <ControlButtons\r\n                    saved={this.state.saved} \r\n                    listLength={this.state.blocksEnabled.length}\r\n                    saveClick={this.saveHandler}\r\n                    cancelClick={this.cancelHandler}/>\r\n                <Modal show={this.state.modalShow} modalClosed={this.closeModalHandler}>\r\n                    {\"Chcesz zamknąć edytor bez zapisania zmian?\"}\r\n                    <div className={styles.buttonsWrapper}> \r\n                        <button onClick={this.closeHandler}>Tak</button>\r\n                        <button onClick={this.closeModalHandler}>Nie</button>\r\n                    </div>\r\n                </Modal>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editor;\r\n\r\n","import React from 'react';\n\nimport Editor from './containers/Editor/Editor';\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <div id='App' className={styles.app}>\n      <header className={styles.header}>\n        <p>\n          Edytor motywu\n        </p>\n      </header>\n      <Editor/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}